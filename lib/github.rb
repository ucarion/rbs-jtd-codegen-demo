# Code generated by jtd-codegen for Ruby v0.1.0

require 'json'
require 'time'

module Github

  class SearchRepositoriesResponseItemLicense
    attr_accessor :key
    attr_accessor :name
    attr_accessor :node_id
    attr_accessor :spdx_id
    attr_accessor :url

    def self.from_json_data(data)
      out = SearchRepositoriesResponseItemLicense.new
      out.key = Github::from_json_data(String, data["key"])
      out.name = Github::from_json_data(String, data["name"])
      out.node_id = Github::from_json_data(String, data["node_id"])
      out.spdx_id = Github::from_json_data(String, data["spdx_id"])
      out.url = Github::from_json_data(String, data["url"])
      out
    end

    def to_json_data
      data = {}
      data["key"] = Github::to_json_data(key)
      data["name"] = Github::to_json_data(name)
      data["node_id"] = Github::to_json_data(node_id)
      data["spdx_id"] = Github::to_json_data(spdx_id)
      data["url"] = Github::to_json_data(url)
      data
    end
  end

  class SearchRepositoriesResponseItemOwner
    attr_accessor :avatar_url
    attr_accessor :events_url
    attr_accessor :followers_url
    attr_accessor :following_url
    attr_accessor :gists_url
    attr_accessor :gravatar_id
    attr_accessor :html_url
    attr_accessor :id
    attr_accessor :login
    attr_accessor :node_id
    attr_accessor :organizations_url
    attr_accessor :received_events_url
    attr_accessor :repos_url
    attr_accessor :site_admin
    attr_accessor :starred_url
    attr_accessor :subscriptions_url
    attr_accessor :type
    attr_accessor :url

    def self.from_json_data(data)
      out = SearchRepositoriesResponseItemOwner.new
      out.avatar_url = Github::from_json_data(String, data["avatar_url"])
      out.events_url = Github::from_json_data(String, data["events_url"])
      out.followers_url = Github::from_json_data(String, data["followers_url"])
      out.following_url = Github::from_json_data(String, data["following_url"])
      out.gists_url = Github::from_json_data(String, data["gists_url"])
      out.gravatar_id = Github::from_json_data(String, data["gravatar_id"])
      out.html_url = Github::from_json_data(String, data["html_url"])
      out.id = Github::from_json_data(Integer, data["id"])
      out.login = Github::from_json_data(String, data["login"])
      out.node_id = Github::from_json_data(String, data["node_id"])
      out.organizations_url = Github::from_json_data(String, data["organizations_url"])
      out.received_events_url = Github::from_json_data(String, data["received_events_url"])
      out.repos_url = Github::from_json_data(String, data["repos_url"])
      out.site_admin = Github::from_json_data(TrueClass, data["site_admin"])
      out.starred_url = Github::from_json_data(String, data["starred_url"])
      out.subscriptions_url = Github::from_json_data(String, data["subscriptions_url"])
      out.type = Github::from_json_data(String, data["type"])
      out.url = Github::from_json_data(String, data["url"])
      out
    end

    def to_json_data
      data = {}
      data["avatar_url"] = Github::to_json_data(avatar_url)
      data["events_url"] = Github::to_json_data(events_url)
      data["followers_url"] = Github::to_json_data(followers_url)
      data["following_url"] = Github::to_json_data(following_url)
      data["gists_url"] = Github::to_json_data(gists_url)
      data["gravatar_id"] = Github::to_json_data(gravatar_id)
      data["html_url"] = Github::to_json_data(html_url)
      data["id"] = Github::to_json_data(id)
      data["login"] = Github::to_json_data(login)
      data["node_id"] = Github::to_json_data(node_id)
      data["organizations_url"] = Github::to_json_data(organizations_url)
      data["received_events_url"] = Github::to_json_data(received_events_url)
      data["repos_url"] = Github::to_json_data(repos_url)
      data["site_admin"] = Github::to_json_data(site_admin)
      data["starred_url"] = Github::to_json_data(starred_url)
      data["subscriptions_url"] = Github::to_json_data(subscriptions_url)
      data["type"] = Github::to_json_data(type)
      data["url"] = Github::to_json_data(url)
      data
    end
  end

  class SearchRepositoriesResponseItem
    attr_accessor :archive_url
    attr_accessor :archived
    attr_accessor :assignees_url
    attr_accessor :blobs_url
    attr_accessor :branches_url
    attr_accessor :clone_url
    attr_accessor :collaborators_url
    attr_accessor :comments_url
    attr_accessor :commits_url
    attr_accessor :compare_url
    attr_accessor :contents_url
    attr_accessor :contributors_url
    attr_accessor :created_at
    attr_accessor :default_branch
    attr_accessor :deployments_url
    attr_accessor :description
    attr_accessor :disabled
    attr_accessor :downloads_url
    attr_accessor :events_url
    attr_accessor :fork
    attr_accessor :forks
    attr_accessor :forks_count
    attr_accessor :forks_url
    attr_accessor :full_name
    attr_accessor :git_commits_url
    attr_accessor :git_refs_url
    attr_accessor :git_tags_url
    attr_accessor :git_url
    attr_accessor :has_downloads
    attr_accessor :has_issues
    attr_accessor :has_pages
    attr_accessor :has_projects
    attr_accessor :has_wiki
    attr_accessor :homepage
    attr_accessor :hooks_url
    attr_accessor :html_url
    attr_accessor :id
    attr_accessor :issue_comment_url
    attr_accessor :issue_events_url
    attr_accessor :issues_url
    attr_accessor :keys_url
    attr_accessor :labels_url
    attr_accessor :language
    attr_accessor :languages_url
    attr_accessor :license
    attr_accessor :merges_url
    attr_accessor :milestones_url
    attr_accessor :mirror_url
    attr_accessor :name
    attr_accessor :node_id
    attr_accessor :notifications_url
    attr_accessor :open_issues
    attr_accessor :open_issues_count
    attr_accessor :owner
    attr_accessor :private
    attr_accessor :pulls_url
    attr_accessor :pushed_at
    attr_accessor :releases_url
    attr_accessor :score
    attr_accessor :size
    attr_accessor :ssh_url
    attr_accessor :stargazers_count
    attr_accessor :stargazers_url
    attr_accessor :statuses_url
    attr_accessor :subscribers_url
    attr_accessor :subscription_url
    attr_accessor :svn_url
    attr_accessor :tags_url
    attr_accessor :teams_url
    attr_accessor :trees_url
    attr_accessor :updated_at
    attr_accessor :url
    attr_accessor :watchers
    attr_accessor :watchers_count

    def self.from_json_data(data)
      out = SearchRepositoriesResponseItem.new
      out.archive_url = Github::from_json_data(String, data["archive_url"])
      out.archived = Github::from_json_data(TrueClass, data["archived"])
      out.assignees_url = Github::from_json_data(String, data["assignees_url"])
      out.blobs_url = Github::from_json_data(String, data["blobs_url"])
      out.branches_url = Github::from_json_data(String, data["branches_url"])
      out.clone_url = Github::from_json_data(String, data["clone_url"])
      out.collaborators_url = Github::from_json_data(String, data["collaborators_url"])
      out.comments_url = Github::from_json_data(String, data["comments_url"])
      out.commits_url = Github::from_json_data(String, data["commits_url"])
      out.compare_url = Github::from_json_data(String, data["compare_url"])
      out.contents_url = Github::from_json_data(String, data["contents_url"])
      out.contributors_url = Github::from_json_data(String, data["contributors_url"])
      out.created_at = Github::from_json_data(DateTime, data["created_at"])
      out.default_branch = Github::from_json_data(String, data["default_branch"])
      out.deployments_url = Github::from_json_data(String, data["deployments_url"])
      out.description = Github::from_json_data(String, data["description"])
      out.disabled = Github::from_json_data(TrueClass, data["disabled"])
      out.downloads_url = Github::from_json_data(String, data["downloads_url"])
      out.events_url = Github::from_json_data(String, data["events_url"])
      out.fork = Github::from_json_data(TrueClass, data["fork"])
      out.forks = Github::from_json_data(Integer, data["forks"])
      out.forks_count = Github::from_json_data(Integer, data["forks_count"])
      out.forks_url = Github::from_json_data(String, data["forks_url"])
      out.full_name = Github::from_json_data(String, data["full_name"])
      out.git_commits_url = Github::from_json_data(String, data["git_commits_url"])
      out.git_refs_url = Github::from_json_data(String, data["git_refs_url"])
      out.git_tags_url = Github::from_json_data(String, data["git_tags_url"])
      out.git_url = Github::from_json_data(String, data["git_url"])
      out.has_downloads = Github::from_json_data(TrueClass, data["has_downloads"])
      out.has_issues = Github::from_json_data(TrueClass, data["has_issues"])
      out.has_pages = Github::from_json_data(TrueClass, data["has_pages"])
      out.has_projects = Github::from_json_data(TrueClass, data["has_projects"])
      out.has_wiki = Github::from_json_data(TrueClass, data["has_wiki"])
      out.homepage = Github::from_json_data(String, data["homepage"])
      out.hooks_url = Github::from_json_data(String, data["hooks_url"])
      out.html_url = Github::from_json_data(String, data["html_url"])
      out.id = Github::from_json_data(Integer, data["id"])
      out.issue_comment_url = Github::from_json_data(String, data["issue_comment_url"])
      out.issue_events_url = Github::from_json_data(String, data["issue_events_url"])
      out.issues_url = Github::from_json_data(String, data["issues_url"])
      out.keys_url = Github::from_json_data(String, data["keys_url"])
      out.labels_url = Github::from_json_data(String, data["labels_url"])
      out.language = Github::from_json_data(String, data["language"])
      out.languages_url = Github::from_json_data(String, data["languages_url"])
      out.license = Github::from_json_data(SearchRepositoriesResponseItemLicense, data["license"])
      out.merges_url = Github::from_json_data(String, data["merges_url"])
      out.milestones_url = Github::from_json_data(String, data["milestones_url"])
      out.mirror_url = Github::from_json_data(Object, data["mirror_url"])
      out.name = Github::from_json_data(String, data["name"])
      out.node_id = Github::from_json_data(String, data["node_id"])
      out.notifications_url = Github::from_json_data(String, data["notifications_url"])
      out.open_issues = Github::from_json_data(Integer, data["open_issues"])
      out.open_issues_count = Github::from_json_data(Integer, data["open_issues_count"])
      out.owner = Github::from_json_data(SearchRepositoriesResponseItemOwner, data["owner"])
      out.private = Github::from_json_data(TrueClass, data["private"])
      out.pulls_url = Github::from_json_data(String, data["pulls_url"])
      out.pushed_at = Github::from_json_data(DateTime, data["pushed_at"])
      out.releases_url = Github::from_json_data(String, data["releases_url"])
      out.score = Github::from_json_data(Integer, data["score"])
      out.size = Github::from_json_data(Integer, data["size"])
      out.ssh_url = Github::from_json_data(String, data["ssh_url"])
      out.stargazers_count = Github::from_json_data(Integer, data["stargazers_count"])
      out.stargazers_url = Github::from_json_data(String, data["stargazers_url"])
      out.statuses_url = Github::from_json_data(String, data["statuses_url"])
      out.subscribers_url = Github::from_json_data(String, data["subscribers_url"])
      out.subscription_url = Github::from_json_data(String, data["subscription_url"])
      out.svn_url = Github::from_json_data(String, data["svn_url"])
      out.tags_url = Github::from_json_data(String, data["tags_url"])
      out.teams_url = Github::from_json_data(String, data["teams_url"])
      out.trees_url = Github::from_json_data(String, data["trees_url"])
      out.updated_at = Github::from_json_data(DateTime, data["updated_at"])
      out.url = Github::from_json_data(String, data["url"])
      out.watchers = Github::from_json_data(Integer, data["watchers"])
      out.watchers_count = Github::from_json_data(Integer, data["watchers_count"])
      out
    end

    def to_json_data
      data = {}
      data["archive_url"] = Github::to_json_data(archive_url)
      data["archived"] = Github::to_json_data(archived)
      data["assignees_url"] = Github::to_json_data(assignees_url)
      data["blobs_url"] = Github::to_json_data(blobs_url)
      data["branches_url"] = Github::to_json_data(branches_url)
      data["clone_url"] = Github::to_json_data(clone_url)
      data["collaborators_url"] = Github::to_json_data(collaborators_url)
      data["comments_url"] = Github::to_json_data(comments_url)
      data["commits_url"] = Github::to_json_data(commits_url)
      data["compare_url"] = Github::to_json_data(compare_url)
      data["contents_url"] = Github::to_json_data(contents_url)
      data["contributors_url"] = Github::to_json_data(contributors_url)
      data["created_at"] = Github::to_json_data(created_at)
      data["default_branch"] = Github::to_json_data(default_branch)
      data["deployments_url"] = Github::to_json_data(deployments_url)
      data["description"] = Github::to_json_data(description)
      data["disabled"] = Github::to_json_data(disabled)
      data["downloads_url"] = Github::to_json_data(downloads_url)
      data["events_url"] = Github::to_json_data(events_url)
      data["fork"] = Github::to_json_data(fork)
      data["forks"] = Github::to_json_data(forks)
      data["forks_count"] = Github::to_json_data(forks_count)
      data["forks_url"] = Github::to_json_data(forks_url)
      data["full_name"] = Github::to_json_data(full_name)
      data["git_commits_url"] = Github::to_json_data(git_commits_url)
      data["git_refs_url"] = Github::to_json_data(git_refs_url)
      data["git_tags_url"] = Github::to_json_data(git_tags_url)
      data["git_url"] = Github::to_json_data(git_url)
      data["has_downloads"] = Github::to_json_data(has_downloads)
      data["has_issues"] = Github::to_json_data(has_issues)
      data["has_pages"] = Github::to_json_data(has_pages)
      data["has_projects"] = Github::to_json_data(has_projects)
      data["has_wiki"] = Github::to_json_data(has_wiki)
      data["homepage"] = Github::to_json_data(homepage)
      data["hooks_url"] = Github::to_json_data(hooks_url)
      data["html_url"] = Github::to_json_data(html_url)
      data["id"] = Github::to_json_data(id)
      data["issue_comment_url"] = Github::to_json_data(issue_comment_url)
      data["issue_events_url"] = Github::to_json_data(issue_events_url)
      data["issues_url"] = Github::to_json_data(issues_url)
      data["keys_url"] = Github::to_json_data(keys_url)
      data["labels_url"] = Github::to_json_data(labels_url)
      data["language"] = Github::to_json_data(language)
      data["languages_url"] = Github::to_json_data(languages_url)
      data["license"] = Github::to_json_data(license)
      data["merges_url"] = Github::to_json_data(merges_url)
      data["milestones_url"] = Github::to_json_data(milestones_url)
      data["mirror_url"] = Github::to_json_data(mirror_url)
      data["name"] = Github::to_json_data(name)
      data["node_id"] = Github::to_json_data(node_id)
      data["notifications_url"] = Github::to_json_data(notifications_url)
      data["open_issues"] = Github::to_json_data(open_issues)
      data["open_issues_count"] = Github::to_json_data(open_issues_count)
      data["owner"] = Github::to_json_data(owner)
      data["private"] = Github::to_json_data(private)
      data["pulls_url"] = Github::to_json_data(pulls_url)
      data["pushed_at"] = Github::to_json_data(pushed_at)
      data["releases_url"] = Github::to_json_data(releases_url)
      data["score"] = Github::to_json_data(score)
      data["size"] = Github::to_json_data(size)
      data["ssh_url"] = Github::to_json_data(ssh_url)
      data["stargazers_count"] = Github::to_json_data(stargazers_count)
      data["stargazers_url"] = Github::to_json_data(stargazers_url)
      data["statuses_url"] = Github::to_json_data(statuses_url)
      data["subscribers_url"] = Github::to_json_data(subscribers_url)
      data["subscription_url"] = Github::to_json_data(subscription_url)
      data["svn_url"] = Github::to_json_data(svn_url)
      data["tags_url"] = Github::to_json_data(tags_url)
      data["teams_url"] = Github::to_json_data(teams_url)
      data["trees_url"] = Github::to_json_data(trees_url)
      data["updated_at"] = Github::to_json_data(updated_at)
      data["url"] = Github::to_json_data(url)
      data["watchers"] = Github::to_json_data(watchers)
      data["watchers_count"] = Github::to_json_data(watchers_count)
      data
    end
  end

  class SearchRepositoriesResponse
    attr_accessor :incomplete_results
    attr_accessor :items
    attr_accessor :total_count

    def self.from_json_data(data)
      out = SearchRepositoriesResponse.new
      out.incomplete_results = Github::from_json_data(TrueClass, data["incomplete_results"])
      out.items = Github::from_json_data(Array[SearchRepositoriesResponseItem], data["items"])
      out.total_count = Github::from_json_data(Integer, data["total_count"])
      out
    end

    def to_json_data
      data = {}
      data["incomplete_results"] = Github::to_json_data(incomplete_results)
      data["items"] = Github::to_json_data(items)
      data["total_count"] = Github::to_json_data(total_count)
      data
    end
  end

  private

  def self.from_json_data(type, data)
    if data.nil? || [Object, TrueClass, Integer, Float, String].include?(type)
      data
    elsif type == DateTime
      DateTime.rfc3339(data)
    elsif type.is_a?(Array)
      data.map { |elem| from_json_data(type.first, elem) }
    elsif type.is_a?(Hash)
      data.transform_values { |elem| from_json_data(type.values.first, elem) }
    else
      type.from_json_data(data)
    end
  end

  def self.to_json_data(data)
    if data.nil? || [TrueClass, FalseClass, Integer, Float, String].include?(data.class)
      data
    elsif data.is_a?(DateTime)
      data.rfc3339
    elsif data.is_a?(Array)
      data.map { |elem| to_json_data(elem) }
    elsif data.is_a?(Hash)
      data.transform_values { |elem| to_json_data(elem) }
    else
      data.to_json_data
    end
  end
end
